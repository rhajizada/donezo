name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Install X11 headers (for Linux clipboard cgo)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y build-essential libx11-dev

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          args: --timeout 5m

  build:
    name: build
    needs: lint
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Install Linux build deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libx11-dev

      - name: Build
        env:
          CGO_ENABLED: 1
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          VERSION: ${{ github.sha }}
        run: |
          mkdir -p bin
          OUT="bin/donezo"
          if [ "$GOOS" = "windows" ]; then
            OUT="${OUT}.exe"
          fi
          go build -ldflags="-s -w -X main.Version=${VERSION}" -o "${OUT}" .
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: donezo-${{ matrix.goos }}-${{ matrix.goarch }}
          path: bin/*
